//Scala imports
import scala.collection.mutable
//Scalation imports
import scalation.analytics.Regression
import scalation.linalgebra. {MatrixD, VectorD, VectoD, Fac_Inv}
import scalation.plot.{Plot,PlotM}

object BankRegression extends App
{
    // 35 data points:           Constant      x1          x2           x3
    //                                      GDP    Interest Rate     WPI           Year
    //
val x = new  MatrixD ((35, 4),     1.0,    474131,	7.25,	       14.3,    //      1970
				   1.0,    478918,	7.25,	       15.1,    //	1971
				   1.0,    477392,	7.25,	       16.7,    //	1972                             
				   1.0,    499120,	7.25,	       20.1,    //	1973
				   1.0,    504914,	9,	       25.1,    //	1974
				   1.0,    550379,	10,	       24.8,    //	1975
				   1.0,    557258,	10,	       25.3,    //	1976
				   1.0,    598885,	9,	       26.6,    //	1977
				   1.0,    631839,	9,	       26.6,    //	1978
				   1.0,    598974,	10,	       31.2,    //	1979
				   1.0,    641921,	10,	       36.9,    //	1980
				   1.0,    678033,	10,	       40.4,    //	1981
				   1.0,    697861,	11,	       41.4,    //	1982
				   1.0,    752669,	11,	       45.3,    //	1983
				   1.0,    782484,	11,	       48.5,    //	1984
				   1.0,    815049,	11,	       51.3,    //	1985
				   1.0,    850217,	11,	       54,    //	1986
				   1.0,    880267,	10,	       58.2,    //	1987
				   1.0,    969702,	10,	       62.2,    //	1988
				   1.0,    1029178,	10,	       66.9,    //	1989
				   1.0,    1083572,	11,	       73.7,    //	1990
				   1.0,    1099072,	13,	       83.9,    //	1991
				   1.0,    1158025,	11,	       92.3,    //	1992
				   1.0,    1223816,	10,	       100,     //	1993
				   1.0,    1302076,	11,	       112.6,   //	1994
				   1.0,    1396974,	13,	       121.6,   //	1995
				   1.0,    1508378,	13,	       127.2,   //	1996
				   1.0,    1573263,	12,	       132.8,   //	1997
				   1.0,    1678410,	11.5,	       140.7,   //	1998
				   1.0,    1786526,	10.5,	       145.3,   //	1999
				   1.0,    1863773,	10,	       155.7,   //	2000
				   1.0,    1972912,	8.25,	       161.3,   //	2001
				   1.0,    2047733,	5.875,	       166.8,   //	2002
				   1.0,    2222591,	5.375,	       175.9,   //	2003
				   1.0,    2389660,	6,	       187.3)   //	2004

    val y = VectorD (7374.0, 8323.0, 9700.0, 11200.0, 11975.0, 13325.0, 16024.0, 14388.0, 
			17292.0, 20000.0, 23424.0, 24937.0, 28535.0, 33398.0, 39915.0, 
			44095.0, 51516.0, 58555.0, 66786.0, 81060.0, 92892.0, 114406.0, 
			124066.0, 150778.0, 192257.0, 214835.0, 240615.0, 267844.0, 
			309068.0, 341796.0, 379450.0, 422843.0, 473581.0, 578716.0, 647495.0)

val rg = new Regression(x, y)
rg.train().eval()
println("b = " + rg.coefficient)
println("full mod fit = " + rg.fitMap)
//println ("reduced model: fit = " + rg.backElim())

val GDP = VectorD.range (0,34)
val interest = VectorD.range (0,34)
val WPI = VectorD.range (0,34)
val xrange = VectorD.range(0,34)

for (i <- xrange.range){
	GDP(i) = x(i,1)
	interest(i) = x(i,2)
	WPI(i) = x(i,3)
}

new Plot (y, GDP)
new Plot (y, interest)
new Plot (y, WPI)

val x2 = new  MatrixD ((35, 3),     1.0,    474131,	7.25,	 //      14.3,    //      1970
				   1.0,    478918,	7.25,	  //     15.1,    //	1971
				   1.0,    477392,	7.25,	  //     16.7,    //	1972                             
				   1.0,    499120,	7.25,	 //      20.1,    //	1973
				   1.0,    504914,	9,	  //     25.1,    //	1974
				   1.0,    550379,	10,	  //     24.8,    //	1975
				   1.0,    557258,	10,	  //     25.3,    //	1976
				   1.0,    598885,	9,	   //    26.6,    //	1977
				   1.0,    631839,	9,	   //    26.6,    //	1978
				   1.0,    598974,	10,	    //   31.2,    //	1979
				   1.0,    641921,	10,	   //    36.9,    //	1980
				   1.0,    678033,	10,	    //   40.4,    //	1981
				   1.0,    697861,	11,	    //   41.4,    //	1982
				   1.0,    752669,	11,	    //   45.3,    //	1983
				   1.0,    782484,	11,	     //  48.5,    //	1984
				   1.0,    815049,	11,	       //51.3,    //	1985
				   1.0,    850217,	11,	       //54,    //	1986
				   1.0,    880267,	10,	   //    58.2,    //	1987
				   1.0,    969702,	10,	     //  62.2,    //	1988
				   1.0,    1029178,	10,	      // 66.9,    //	1989
				   1.0,    1083572,	11,	      // 73.7,    //	1990
				   1.0,    1099072,	13,	//       83.9,    //	1991
				   1.0,    1158025,	11,	  //     92.3,    //	1992
				   1.0,    1223816,	10,	//       100,     //	1993
				   1.0,    1302076,	11,	  //     112.6,   //	1994
				   1.0,    1396974,	13,	    //   121.6,   //	1995
				   1.0,    1508378,	13,//	       127.2,   //	1996
				   1.0,    1573263,	12,	//       132.8,   //	1997
				   1.0,    1678410,	11.5,	  //     140.7,   //	1998
				   1.0,    1786526,	10.5,	    //   145.3,   //	1999
				   1.0,    1863773,	10,	 //      155.7,   //	2000
				   1.0,    1972912,	8.25,	  //     161.3,   //	2001
				   1.0,    2047733,	5.875,	  //     166.8,   //	2002
				   1.0,    2222591,	5.375,	   //    175.9,   //	2003
				   1.0,    2389660,	6)	   //    187.3)   //	2004



val rg2 = new Regression(x2, y)
rg2.train().eval()
println("b = " + rg2.coefficient)
println("full mod fit = " + rg2.fitMap)


} // BankRegression
